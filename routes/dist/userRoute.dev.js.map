{"version":3,"sources":["userRoute.js"],"names":["express","require","app","Usermodel","router","Router","post","req","res","findOne","username","body","password","result","send","status","json","newuser","save","err","findOneAndUpdate","_id","user","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,GAAG,GAACF,OAAO,EAAf;;AACA,IAAMG,SAAS,GAACF,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAMG,MAAM,GAACJ,OAAO,CAACK,MAAR,EAAb;AACAD,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAECL,SAAS,CAACM,OAAV,CAAkB;AACrCC,YAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAASD,QADkB;AAErCE,YAAAA,QAAQ,EAAEL,GAAG,CAACI,IAAJ,CAASC;AAFkB,WAAlB,CAFD;;AAAA;AAEdC,UAAAA,MAFc;;AAOpB,cAAIA,MAAJ,EAAY;AACVL,YAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;AACD,WAFD,MAEO;AACLL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB;AACD;;AAXmB;AAAA;;AAAA;AAAA;AAAA;AAapBR,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;AAboB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAiBAZ,MAAM,CAACE,IAAP,CAAY,eAAZ,EAA4B,UAACC,GAAD,EAAKC,GAAL,EAAW;AACnC,MAAIS,OAAO,GAAC,IAAId,SAAJ,CAAc;AAACO,IAAAA,QAAQ,EAACH,GAAG,CAACI,IAAJ,CAASD,QAAnB;AAA4BE,IAAAA,QAAQ,EAACL,GAAG,CAACI,IAAJ,CAASC;AAA9C,GAAd,CAAZ;AACAK,EAAAA,OAAO,CAACC,IAAR,CAAa,UAASC,GAAT,EAAa;AACtB,QAAGA,GAAH,EAAO;AACHX,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACH,KAFD,MAGI;AACIR,MAAAA,GAAG,CAACM,IAAJ,CAAS,6BAAT;AACH;AACJ,GAPL;AAQC,CAVL;AAWAV,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAETL,SAAS,CAACiB,gBAAV,CAA2B;AAAEC,YAAAA,GAAG,EAAEd,GAAG,CAACI,IAAJ,CAASU;AAAhB,WAA3B,EAAkDd,GAAG,CAACI,IAAtD,CAFS;;AAAA;AAAA;AAAA,0CAGIR,SAAS,CAACM,OAAV,CAAkB;AAAEY,YAAAA,GAAG,EAAEd,GAAG,CAACI,IAAJ,CAASU;AAAhB,WAAlB,CAHJ;;AAAA;AAGTC,UAAAA,IAHS;AAIfd,UAAAA,GAAG,CAACM,IAAJ,CAASQ,IAAT;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfd,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AASAO,MAAM,CAACC,OAAP,GAAepB,MAAf","sourcesContent":["const express=require('express')\r\nvar app=express()\r\nconst Usermodel=require('../models/usermodel')\r\n\r\nconst router=express.Router()\r\nrouter.post(\"/loginuser\", async (req, res) => {\r\n    try {\r\n      const result = await Usermodel.findOne({\r\n        username: req.body.username,\r\n        password: req.body.password,\r\n      });\r\n  \r\n      if (result) {\r\n        res.send(result);\r\n      } else {\r\n        res.status(400).json(\"Login failed\");\r\n      }\r\n    } catch (error) {\r\n      res.status(400).json(error);\r\n    }\r\n  });\r\n  \r\nrouter.post('/registeruser',(req,res)=>{   \r\n    var newuser=new Usermodel({username:req.body.username,password:req.body.password})\r\n    newuser.save(function(err){\r\n        if(err){\r\n            res.status(400).json(\"something error occured\")\r\n        }\r\n        else{\r\n                res.send(\"user registration succesful\")\r\n            }\r\n        })\r\n    })\r\nrouter.post(\"/update\", async (req, res) => {\r\n      try {\r\n        await Usermodel.findOneAndUpdate({ _id: req.body._id }, req.body);\r\n        const user = await Usermodel.findOne({ _id: req.body._id });\r\n        res.send(user);\r\n      } catch (error) {\r\n        res.status(400).json(error);\r\n      }\r\n    });\r\nmodule.exports=router;"],"file":"userRoute.dev.js"}